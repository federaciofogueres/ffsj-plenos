{"version":3,"file":"ffsj-web-components.mjs","sources":["../../../projects/ffsj-web-components/src/lib/ffsj-web-components.component.ts","../../../projects/ffsj-web-components/src/lib/ffsj-web-components.service.ts","../../../projects/ffsj-web-components/src/lib/ffsj-alert/alertType.enum.ts","../../../projects/ffsj-web-components/src/lib/ffsj-alert/ffsj-alert.service.ts","../../../projects/ffsj-web-components/src/lib/ffsj-alert/ffsj-alert.component.ts","../../../projects/ffsj-web-components/src/lib/ffsj-alert/ffsj-alert.component.html","../../../projects/ffsj-web-components/src/lib/ffsj-login/external-api/configuration.ts","../../../projects/ffsj-web-components/src/lib/ffsj-login/services/censo.service.ts","../../../projects/ffsj-web-components/src/lib/ffsj-login/services/encoder.service.ts","../../../projects/ffsj-web-components/src/lib/ffsj-login/services/auth.service.ts","../../../projects/ffsj-web-components/src/lib/ffsj-login/ffsj-login.component.ts","../../../projects/ffsj-web-components/src/lib/ffsj-login/ffsj-login.component.html","../../../projects/ffsj-web-components/src/lib/ffsj-login/guards/auth.guard.ts","../../../projects/ffsj-web-components/src/lib/ffsj-spinner/ffsj-spinner.component.ts","../../../projects/ffsj-web-components/src/lib/ffsj-spinner/ffsj-spinner.component.html","../../../projects/ffsj-web-components/src/lib/ffsj-dialog-alert/alertButtonType.enum.ts","../../../projects/ffsj-web-components/src/lib/ffsj-dialog-alert/ffsj-dialog-alert.component.ts","../../../projects/ffsj-web-components/src/lib/ffsj-dialog-alert/ffsj-dialog-alert.component.html","../../../projects/ffsj-web-components/src/lib/ffsj-dialog-alert/ffsj-dialog-alert.service.ts","../../../projects/ffsj-web-components/src/public-api.ts","../../../projects/ffsj-web-components/src/ffsj-web-components.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ffsj-web-components',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      ffsj-web-components works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class FfsjWebComponentsComponent {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FfsjWebComponentsService {\r\n\r\n  constructor() { }\r\n}\r\n","export enum AlertType {\r\n    Success = 'success',\r\n    Danger = 'danger',\r\n    Warning = 'warning',\r\n    Info = 'info'\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AlertType } from './alertType.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FfsjAlertService {\r\n  alert$ = new Subject<{type: AlertType, message: string, duration: number}>();\r\n\r\n  success(message: string, duration: number = 5000) {\r\n    this.alert$.next({ type: AlertType.Success, message: message, duration: duration });\r\n  }\r\n\r\n  danger(message: string, duration: number = 5000) {\r\n    this.alert$.next({ type: AlertType.Danger, message: message, duration: duration });\r\n  }\r\n\r\n  warning(message: string, duration: number = 5000) {\r\n    this.alert$.next({ type: AlertType.Warning, message: message, duration: duration });\r\n  }\r\n\r\n  info(message: string, duration: number = 5000) {\r\n    this.alert$.next({ type: AlertType.Info, message: message, duration: duration });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AlertType } from './alertType.enum';\r\nimport { FfsjAlertService } from './ffsj-alert.service';\r\n\r\n@Component({\r\n  selector: 'lib-ffsj-alert',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './ffsj-alert.component.html',\r\n  styleUrl: './ffsj-alert.component.scss'\r\n})\r\nexport class FfsjAlertComponent {\r\n  public message!: string | null;\r\n  public type!: AlertType;\r\n  public subscription!: Subscription;\r\n\r\n  constructor(private ffsjAlertService: FfsjAlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.ffsjAlertService.alert$.subscribe(alert => {\r\n      this.message = alert.message;\r\n      this.type = alert.type;\r\n      setTimeout(() => this.closeAlert(), alert.duration);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeAlert() {\r\n    this.message = null;\r\n  }\r\n}\r\n","@if (message) {\r\n    <div class=\"alert alert-{{type}}\" role=\"alert\">\r\n        {{message}}\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAlert()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n}","export interface ConfigurationParameters {\r\n    apiKeys?: {[ key: string ]: string};\r\n    username?: string;\r\n    password?: string;\r\n    accessToken?: string | (() => string);\r\n    basePath?: string;\r\n    withCredentials?: boolean;\r\n}\r\n\r\nexport class Configuration {\r\n    apiKeys?: {[ key: string ]: string};\r\n    username?: string;\r\n    password?: string;\r\n    accessToken?: string | (() => string);\r\n    basePath?: string;\r\n    withCredentials?: boolean;\r\n\r\n    constructor(configurationParameters: ConfigurationParameters = {}) {\r\n        this.apiKeys = configurationParameters.apiKeys;\r\n        this.username = configurationParameters.username;\r\n        this.password = configurationParameters.password;\r\n        this.accessToken = configurationParameters.accessToken;\r\n        this.basePath = configurationParameters.basePath;\r\n        this.withCredentials = configurationParameters.withCredentials;\r\n    }\r\n\r\n    /**\r\n     * Select the correct content-type to use for a request.\r\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\r\n     * If no content type is found return the first found type if the contentTypes is not empty\r\n     * @param contentTypes - the array of content types that are available for selection\r\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n     */\r\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\r\n        if (contentTypes.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let type = contentTypes.find(x => this.isJsonMime(x));\r\n        if (type === undefined) {\r\n            return contentTypes[0];\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * Select the correct accept content-type to use for a request.\r\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\r\n     * If no content type is found return the first found type if the contentTypes is not empty\r\n     * @param accepts - the array of content types that are available for selection.\r\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\r\n     */\r\n    public selectHeaderAccept(accepts: string[]): string | undefined {\r\n        if (accepts.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let type = accepts.find(x => this.isJsonMime(x));\r\n        if (type === undefined) {\r\n            return accepts[0];\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * Check if the given MIME is a JSON MIME.\r\n     * JSON MIME examples:\r\n     *   application/json\r\n     *   application/json; charset=UTF8\r\n     *   APPLICATION/JSON\r\n     *   application/vnd.company+json\r\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\r\n     * @return True if the given MIME is JSON, false otherwise.\r\n     */\r\n    public isJsonMime(mime: string): boolean {\r\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\r\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\r\n    }\r\n}\r\n","import { HttpClient, HttpEvent, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Configuration } from '../external-api/configuration';\r\nimport { ResponseAsociaciones } from '../external-api/responseAsociaciones';\r\nimport { ResponseAsociados } from '../external-api/responseAsociados';\r\nimport { ResponseToken } from '../external-api/responseToken';\r\nimport { Usuario } from '../external-api/usuario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CensoService {\r\n\r\n  protected basePath = 'https://censo-api.hogueras.es/emjf1/Censo-Hogueras/1.0.0';\r\n  public defaultHeaders = new HttpHeaders();\r\n  public configuration = new Configuration();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { \r\n    \r\n  }\r\n\r\n  /**\r\n   * Listar todas las asociaciones\r\n   * \r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public asociacionesGet(observe?: 'body', reportProgress?: boolean): Observable<ResponseAsociaciones>;\r\n  public asociacionesGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseAsociaciones>>;\r\n  public asociacionesGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseAsociaciones>>;\r\n  public asociacionesGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    // authentication (BearerAuth) required\r\n    if (this.configuration.accessToken) {\r\n        const accessToken = typeof this.configuration.accessToken === 'function'\r\n            ? this.configuration.accessToken()\r\n            : this.configuration.accessToken;\r\n        headers = headers.set('Authorization', 'Bearer ' + accessToken);\r\n    }\r\n    // to determine the Accept header\r\n    let httpHeaderAccepts: string[] = [\r\n        'application/json'\r\n    ];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n        headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n\r\n    return this.httpClient.request<ResponseAsociaciones>('get',`${this.basePath}/asociaciones`,\r\n        {\r\n            withCredentials: this.configuration.withCredentials,\r\n            headers: headers,\r\n            observe: observe,\r\n            reportProgress: reportProgress\r\n        }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Realizar la autentificación del usuario\r\n   * \r\n   * @param body \r\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n   * @param reportProgress flag to report request and response progress.\r\n   */\r\n  public doLogin(body: Usuario, observe?: 'body', reportProgress?: boolean): Observable<ResponseToken>;\r\n  public doLogin(body: Usuario, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseToken>>;\r\n  public doLogin(body: Usuario, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseToken>>;\r\n  public doLogin(body: Usuario, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n    let headers = this.defaultHeaders;\r\n\r\n    let httpHeaderAccepts: string[] = ['application/json'];\r\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n    if (httpHeaderAcceptSelected != undefined) {\r\n        headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n    }\r\n\r\n    // to determine the Content-Type header\r\n    const consumes: string[] = [\r\n        'application/json'\r\n    ];\r\n    const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\r\n    if (httpContentTypeSelected != undefined) {\r\n        headers = headers.set('Content-Type', httpContentTypeSelected);\r\n    }\r\n    return this.httpClient.request<ResponseToken>('post',`${this.basePath}/login`,\r\n      {\r\n          body: body,\r\n          withCredentials: this.configuration.withCredentials,\r\n          headers: headers,\r\n          observe: observe,\r\n          reportProgress: reportProgress\r\n      }\r\n    );\r\n  }\r\n\r\n      /**\r\n     * Obtener un asociado\r\n     * \r\n     * @param asociado \r\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n     * @param reportProgress flag to report request and response progress.\r\n     */\r\n      public asociadosGetById(asociado: number, observe?: 'body', reportProgress?: boolean): Observable<ResponseAsociados>;\r\n      public asociadosGetById(asociado: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseAsociados>>;\r\n      public asociadosGetById(asociado: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseAsociados>>;\r\n      public asociadosGetById(asociado: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n  \r\n          if (asociado === null || asociado === undefined) {\r\n              throw new Error('Required parameter asociado was null or undefined when calling asociadosGetById.');\r\n          }\r\n  \r\n          let headers = this.defaultHeaders;\r\n  \r\n          // authentication (BearerAuth) required\r\n          if (this.configuration.accessToken) {\r\n              const accessToken = typeof this.configuration.accessToken === 'function'\r\n                  ? this.configuration.accessToken()\r\n                  : this.configuration.accessToken;\r\n              headers = headers.set('Authorization', 'Bearer ' + accessToken);\r\n          }\r\n          // to determine the Accept header\r\n          let httpHeaderAccepts: string[] = [\r\n              'application/json'\r\n          ];\r\n          const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n          if (httpHeaderAcceptSelected != undefined) {\r\n              headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n          }\r\n  \r\n          // to determine the Content-Type header\r\n          const consumes: string[] = [\r\n          ];\r\n  \r\n          return this.httpClient.request<ResponseAsociados>('get',`${this.basePath}/asociados/${encodeURIComponent(String(asociado))}`,\r\n              {\r\n                  withCredentials: this.configuration.withCredentials,\r\n                  headers: headers,\r\n                  observe: observe,\r\n                  reportProgress: reportProgress\r\n              }\r\n          );\r\n      }\r\n    \r\n          /**\r\n     * Actualizar un asociado\r\n     * \r\n     * @param body \r\n     * @param asociado \r\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\r\n     * @param reportProgress flag to report request and response progress.\r\n     */\r\n    public asociadosPut(body: ResponseAsociados, asociado: number, observe?: 'body', reportProgress?: boolean): Observable<ResponseAsociados>;\r\n    public asociadosPut(body: ResponseAsociados, asociado: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseAsociados>>;\r\n    public asociadosPut(body: ResponseAsociados, asociado: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseAsociados>>;\r\n    public asociadosPut(body: ResponseAsociados, asociado: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\r\n\r\n        if (body === null || body === undefined) {\r\n            throw new Error('Required parameter body was null or undefined when calling asociadosPut.');\r\n        }\r\n\r\n        if (asociado === null || asociado === undefined) {\r\n            throw new Error('Required parameter asociado was null or undefined when calling asociadosPut.');\r\n        }\r\n\r\n        let headers = this.defaultHeaders;\r\n\r\n        // authentication (BearerAuth) required\r\n        if (this.configuration.accessToken) {\r\n            const accessToken = typeof this.configuration.accessToken === 'function'\r\n                ? this.configuration.accessToken()\r\n                : this.configuration.accessToken;\r\n            headers = headers.set('Authorization', 'Bearer ' + accessToken);\r\n        }\r\n        // to determine the Accept header\r\n        let httpHeaderAccepts: string[] = [\r\n            'application/json'\r\n        ];\r\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\r\n        if (httpHeaderAcceptSelected != undefined) {\r\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\r\n        }\r\n\r\n        // to determine the Content-Type header\r\n        const consumes: string[] = [\r\n            'application/json'\r\n        ];\r\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\r\n        if (httpContentTypeSelected != undefined) {\r\n            headers = headers.set('Content-Type', httpContentTypeSelected);\r\n        }\r\n\r\n        return this.httpClient.request<ResponseAsociados>('put',`${this.basePath}/asociados/${encodeURIComponent(String(asociado))}`,\r\n            {\r\n                body: body,\r\n                withCredentials: this.configuration.withCredentials,\r\n                headers: headers,\r\n                observe: observe,\r\n                reportProgress: reportProgress\r\n            }\r\n        );\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport * as bcrypt from 'bcryptjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EncoderService {\r\n\r\n  private key = 'eFfFsJ2023*';\r\n  private iv = CryptoJS.enc.Utf8.parse('1234567890123456');\r\n\r\n  constructor() {\r\n    this.key = 'eFfFsJ2023*';\r\n    this.iv = CryptoJS.enc.Utf8.parse('1234567890123456');\r\n  }\r\n\r\n  encryptPassword(data: string) {\r\n    const saltRounds = 10;\r\n    let salt = bcrypt.genSaltSync(saltRounds);\r\n    let encodedPassword = bcrypt.hashSync(data, salt);\r\n    return encodedPassword;\r\n  }\r\n\r\n  checkPassword(password: string, encrypted: string) {\r\n    return bcrypt.compareSync(password, encrypted);\r\n  }\r\n\r\n  // Método para encriptar datos de entrada\r\n  public encrypt(password: string): string {\r\n    const encrypted = CryptoJS.AES.encrypt(password, this.key, { iv: this.iv });\r\n    return encrypted.toString();\r\n  }\r\n\r\n  // Método para desencriptar datos de entrada\r\n  public decrypt(passwordToDecrypt: string): string {\r\n    const decrypted = CryptoJS.AES.decrypt(passwordToDecrypt, this.key, { iv: this.iv });\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Usuario } from '../external-api/usuario';\r\nimport { CensoService } from './censo.service';\r\nimport { EncoderService } from './encoder.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private loginStatus$ = new BehaviorSubject<boolean>(false);\r\n  loginStatusObservable = this.loginStatus$.asObservable();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private censoService: CensoService,\r\n    private encoderService: EncoderService,\r\n    private cookieService: CookieService\r\n  ) { }\r\n\r\n  checkToken(): boolean {\r\n    return !this.checkExpireDateToken(this.encoderService.decrypt(this.cookieService.get('token')!))\r\n  }\r\n\r\n  checkExpireDateToken(token: string) {\r\n    if (token === '' || token === null) {\r\n      return true;\r\n    }\r\n    const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;\r\n    return (Math.floor((new Date).getTime() / 1000)) >= expiry;\r\n  }\r\n\r\n  private isLocalDomain(): boolean {\r\n    return window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n  }\r\n  \r\n  saveToken(token: string): void {\r\n    const isLocal = this.isLocalDomain();\r\n    const hostName = isLocal ? undefined : '.hogueras.es';\r\n    const options = {\r\n      domain: hostName,\r\n      path: '/',\r\n      secure: !isLocal // Assuming secure cookies should not be set for localhost\r\n    }\r\n    this.cookieService.set('token', this.encoderService.encrypt(token), options);\r\n  }\r\n\r\n  async login(user: string, password: string) {\r\n    let usuario: Usuario = {\r\n      user,\r\n      password: this.encoderService.encrypt(password)\r\n    }\r\n    return new Promise(async (resolve, reject) => {\r\n      this.censoService.doLogin(usuario).subscribe({\r\n        next: (res: any) => {\r\n          if (res.solicitud) {\r\n            console.log('Cambiar password');\r\n            this.censoService.configuration.accessToken = res.solicitud.token!;\r\n            // this.saveToken(res.solicitud.token!);\r\n            resolve({code: 201, id: res.solicitud.id});\r\n          } else {\r\n            console.log(res);\r\n            this.saveToken(res.token!);\r\n            resolve({code: 200})\r\n          }\r\n          console.log(res);\r\n          this.saveToken(res.token!);\r\n          this.loginStatus$.next(true);\r\n          resolve(res)\r\n        },\r\n        error: (error: any) => {\r\n          console.log(error);\r\n          this.loginStatus$.next(false);\r\n          reject({code: 400})\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  public getToken() {\r\n    let token = '';\r\n    if (this.cookieService.get('token')) {\r\n      token = this.encoderService.decrypt(this.cookieService.get('token')!);\r\n      this.loginStatus$.next(true);\r\n    }\r\n    return token;\r\n  }\r\n\r\n  logout() {\r\n    this.cookieService.delete('token');\r\n    this.router.navigateByUrl('login');\r\n    this.loginStatus$.next(false);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    const token = this.cookieService.get('token');\r\n    const isLoggedIn = token !== null && token !== '' ? this.checkToken() : false;\r\n    this.loginStatus$.next(isLoggedIn);\r\n    return isLoggedIn;\r\n  }\r\n\r\n  getCargos(): any[] {\r\n    try {\r\n      // Suponiendo que token es la cadena que quieres decodificar\r\n      const token = this.cookieService.get('token');\r\n      if (!token) {\r\n        throw new Error('Token no encontrado');\r\n      }\r\n      // Asegúrate de que la cadena esté correctamente codificada en base64 antes de decodificarla\r\n      const tokenDecoded = this.encoderService.decrypt(token);\r\n      const base64Payload = tokenDecoded.split('.')[1]; // Asumiendo JWT. Ajusta según sea necesario.\r\n      const payload = atob(base64Payload);\r\n      // Procesa el payload como necesites\r\n      return JSON.parse(payload).cargos; // Ajusta según la estructura de tus datos\r\n    } catch (error) {\r\n      // console.log('Error al decodificar la cadena base64:', error);\r\n      // Retorna un valor de respaldo o maneja el error como consideres apropiado\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  updatePassword(asociado: number, password: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.censoService.asociadosGetById(asociado).subscribe({\r\n        next: (res: any) => {\r\n          console.log(res);\r\n          let usuario = res.asociados[0];\r\n          usuario.password = this.encoderService.encrypt(password);\r\n          this.censoService.asociadosPut(usuario, usuario.id).subscribe({\r\n            next: (res: any) => {\r\n              console.log(res);\r\n\r\n              resolve(res); // Resuelve la promesa si la actualización es correcta\r\n            },\r\n            error: (error: any) => {\r\n              console.log(error);\r\n              reject(error); // Rechaza la promesa si hay un error en la actualización\r\n            }\r\n          });\r\n        },\r\n        error: (error: any) => {\r\n          console.log(error);\r\n          reject(error); // Rechaza la promesa si hay un error al obtener el usuario\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { FfsjAlertComponent } from \"../ffsj-alert/ffsj-alert.component\";\r\nimport { FfsjAlertService } from '../ffsj-alert/ffsj-alert.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'lib-ffsj-login',\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FfsjAlertComponent\r\n],\r\n  templateUrl: './ffsj-login.component.html',\r\n  styleUrl: './ffsj-login.component.scss'\r\n})\r\nexport class FfsjLoginComponent {\r\n\r\n  @Input() title: string = 'Iniciar Sesión';\r\n  @Input() subtitle: string = 'Acceso a administración';\r\n\r\n  @Output() logStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  username = new FormControl({value: '', disabled: false});\r\n  password = new FormControl('');\r\n  repeatPassword = new FormControl('');\r\n  loading: boolean = false;\r\n\r\n  showChangePasswordForm: boolean = false;\r\n  idAsociadoToChangePassword: number = -1;\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private alertService: FfsjAlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.authService.isLoggedIn()) {\r\n      this.logStatus.emit(true);\r\n    }\r\n  }\r\n\r\n  async login() {\r\n    console.log('Doing Login -> ', this.username.value, this.password.value);\r\n    \r\n    this.loading = true;\r\n    if(this.username.valid && this.password.valid) {\r\n      console.log(`Username: ${this.username.value} - password: ${this.password.value}`);\r\n      const codeLogin: any = await this.authService.login(this.username.value!, this.password.value!);\r\n      if (codeLogin.code === 200) {\r\n        this.loading = false;\r\n        // this.alertService.success('Bienvenido!', 5000)\r\n        this.logStatus.emit(true);\r\n      } else if(codeLogin.code === 400) {\r\n        this.loading = false;\r\n        // this.alertService.danger('Datos incorrectos de inicio de sesión.', 5000)\r\n        this.logStatus.emit(false);\r\n      } else if (codeLogin.code === 201) {\r\n        this.idAsociadoToChangePassword = codeLogin.id;\r\n        this.showChangePasswordForm = true;\r\n        this.username.disable();\r\n        this.password.reset();\r\n        this.loading = false;\r\n      }\r\n    } else {\r\n      this.loading = false;\r\n      this.alertService.danger('Datos incorrectos de inicio de sesión.', 5000)\r\n      this.logStatus.emit(false);\r\n    }\r\n  }\r\n\r\n\r\n  changePassword() {\r\n    if (this.password.value !== this.repeatPassword.value) {\r\n      this.alertService.danger('Las contraseñas no coinciden.', 5000);\r\n      return;\r\n    }\r\n    this.authService.updatePassword(this.idAsociadoToChangePassword, this.password.value!)\r\n      .then((res: any) => {\r\n        console.log(res);\r\n        // this.alertService.success('Contraseña actualizada correctamente.', 5000);\r\n        this.showChangePasswordForm = false;\r\n        this.username.enable();\r\n        this.login();\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error);\r\n        // this.alertService.danger('Error al actualizar la contraseña.', 5000);\r\n      });\r\n  }\r\n  \r\n}\r\n","\r\n    <div class=\"container mt-4 login-container\">\r\n  \r\n      <div class=\"row banner\">\r\n        <h1>\r\n          <img src=\"https://intranet.hogueras.es/wp-content/uploads/2016/12/logofede.png\" class=\"img-fluid\" alt=\"\">\r\n          <span style=\"color: #dd5a43 !important\">{{title}}</span>\r\n        </h1>\r\n        <h4 style=\"color: #478fca !important; text-align: center;\">© Federació de Les Fogueres de Sant Joan</h4>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <h4 class=\"titulo-consultas\" style=\"color: #478fca !important;\">\r\n          {{subtitle}}\r\n        </h4>\r\n      </div>\r\n      <div class=\"row my-3\">\r\n        <label for=\"username\">Usuario</label>\r\n        <input type=\"text\" id=\"username\" class=\"form-control\" [formControl]=\"username\" value=\"\">\r\n      </div>\r\n      @if (showChangePasswordForm) {\r\n        <div class=\"row mb-3\">\r\n          <label for=\"password\">Nueva contraseña</label>\r\n        <input type=\"password\" id=\"password\" class=\"form-control\" [formControl]=\"password\" value=\"\">\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"repeatPassword\">Repite la nueva contraseña</label>\r\n          <input type=\"password\" id=\"repeatPassword\" class=\"form-control\" [formControl]=\"repeatPassword\" value=\"\">\r\n        </div>\r\n      } @else {\r\n        <div class=\"row mb-3\">\r\n            <label for=\"password\">Contraseña</label>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" [formControl]=\"password\" value=\"\">\r\n        </div>\r\n      }\r\n      @if(showChangePasswordForm) {\r\n        <div class=\"row submit-button mt-2\">\r\n          <button (click)=\"changePassword()\">Actualizar contraseña</button>\r\n        </div>\r\n      } @else {\r\n        <div class=\"row submit-button mt-2\">\r\n          <button (click)=\"login()\">Iniciar sesión</button>\r\n        </div>\r\n      }\r\n  \r\n    </div>\r\n\r\n    <lib-ffsj-alert></lib-ffsj-alert>","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { CensoService } from \"../services/censo.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private censoService: CensoService,\r\n  ) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isLoggedIn()){\r\n      let token = this.authService.getToken();\r\n      this.censoService.configuration.accessToken = token;\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ffsj-spinner',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './ffsj-spinner.component.html',\r\n  styleUrl: './ffsj-spinner.component.scss'\r\n})\r\nexport class FfsjSpinnerComponent {\r\n  @Input() fullscreen = false;\r\n  imagePath = '../../../assets/img/fede.png';\r\n}\r\n","<div class=\"bg-dark preloader\" [ngClass]=\"fullscreen ? ['full-size'] : ['component']\">\r\n    <div class=\"spinner-container\">\r\n        <img [src]=\"imagePath\">\r\n    </div>\r\n    <div class=\"loader\">\r\n        <span></span>\r\n    </div>\r\n</div>","export enum AlertButtonType {\r\n    Aceptar = 'Aceptar',\r\n    Cancelar = 'Cancelar',\r\n    Entendido = 'Entendido'\r\n  }\r\n  ","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AlertButtonType } from './alertButtonType.enum';\r\n\r\nexport interface DataAlert {\r\n  title: string;\r\n  content: string;\r\n  buttonsAlert: AlertButtonType[];\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-ffsj-dialog-alert',\r\n  standalone: true,\r\n  imports: [ MatDialogModule ],\r\n  templateUrl: './ffsj-dialog-alert.component.html',\r\n  styleUrl: './ffsj-dialog-alert.component.scss'\r\n})\r\nexport class FfsjDialogAlertComponent {\r\n\r\n  constructor(\r\n    public dialogSelfRef: MatDialogRef<FfsjDialogAlertComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DataAlert\r\n  ) { }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{ data.title }}</h2>\r\n<mat-dialog-content>\r\n  My favorite animal is:\r\n  {{ data.content }}\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  @for (button of data.buttonsAlert; track $index) {\r\n    <button mat-button (click)=\"dialogSelfRef.close(button)\">{{ button }}</button>\r\n  }\r\n</mat-dialog-actions>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DataAlert, FfsjDialogAlertComponent } from './ffsj-dialog-alert.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FfsjDialogAlertService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  openDialogAlert(data: DataAlert) {\r\n    const dialogRef = this.dialog.open(FfsjDialogAlertComponent, {\r\n      data: data,\r\n      width: '600px',\r\n    })\r\n    return dialogRef;\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ffsj-web-components\r\n */\r\n\r\nexport * from './lib/ffsj-web-components.component';\r\nexport * from './lib/ffsj-web-components.service';\r\n\r\nexport * from './lib/ffsj-login/ffsj-login.component';\r\nexport * from './lib/ffsj-login/guards/auth.guard';\r\nexport * from './lib/ffsj-login/services/auth.service';\r\nexport * from './lib/ffsj-login/services/encoder.service';\r\n\r\nexport * from './lib/ffsj-spinner/ffsj-spinner.component';\r\n\r\nexport * from './lib/ffsj-alert/alertType.enum';\r\nexport * from './lib/ffsj-alert/ffsj-alert.component';\r\nexport * from './lib/ffsj-alert/ffsj-alert.service';\r\n\r\nexport * from './lib/ffsj-dialog-alert/alertButtonType.enum';\r\nexport * from './lib/ffsj-dialog-alert/ffsj-dialog-alert.component';\r\nexport * from './lib/ffsj-dialog-alert/ffsj-dialog-alert.service';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.FfsjAlertService","i1","i2.CensoService","i3.EncoderService","i1.AuthService","i2.FfsjAlertService","i2","i3.CensoService"],"mappings":"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"}